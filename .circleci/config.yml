# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6.1
        environment:
          PIPENV_VENV_IN_PROJECT: true

      - image: "mariadb:10.2.12"
        environment:
          MYSQL_DATABASE: "food"
          MYSQL_USER: "root"
          MYSQL_ROOT_PASSWORD: "root"
          MYSQL_HOST: "127.0.0.1"


      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/food

    steps:
      - checkout

      # Download and cache dependencies
#      - restore_cache:
#          keys:
#            - v1-dependencies-{{ checksum "requirements.txt" }}
#            # fallback to using the latest cache if no exact match is found
#            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            sudo pip install pipenv
            pipenv install

      - run:
          name: upload secrets
          command: |
            touch food2/deploy/secrets_local.py
            echo ${secrets_file} | base64 -d > food2/deploy/secrets_local.py

      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io
      - run:
          name: "Wait for database to be available"
          command: "dockerize -wait tcp://127.0.0.1:3306 -timeout 1m"

      - run:
          name: run tests
          command: |
            cd food2
            pipenv run python manage.py test

      - store_artifacts:
          path: test-reports
          destination: test-reports
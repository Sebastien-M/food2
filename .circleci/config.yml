# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6.1
        environment:
          PIPENV_VENV_IN_PROJECT: true

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/food

    steps:
      - checkout

      # Download and cache dependencies
#      - restore_cache:
#          keys:
#            - v1-dependencies-{{ checksum "requirements.txt" }}
#            # fallback to using the latest cache if no exact match is found
#            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            sudo pip install pipenv
            pipenv install


#      - save_cache:
#          paths:
#            - ./venv
#          key: v1-dependencies-{{ checksum "requirements.txt" }}

      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io
      - run:
          name: run tests
          command: |
            cd food2
            touch deploy/secrets_local.py
            echo 'import os' >> deploy/secrets_local.py
            echo 'SECRETS_BASE_DIR = ${SECRETS_BASE_DIR}' >> deploy/secrets_local.py
            echo 'SECRETS_ALLOWED_HOSTS = ${SECRETS_ALLOWED_HOSTS}' >> deploy/secrets_local.py
            echo 'SECRETS_DB_NAME = ${SECRETS_DB_NAME}' >> deploy/secrets_local.py
            echo 'SECRETS_DB_USER = ${SECRETS_DB_USER}' >> deploy/secrets_local.py
            echo 'SECRETS_DB_PASS = ${SECRETS_DB_PASS}' >> deploy/secrets_local.py
            echo 'SECRETS_DB_HOST = ${SECRETS_DB_HOST}' >> deploy/secrets_local.py
            echo 'SECRETS_DB_PORT = ${SECRETS_DB_PORT}' >> deploy/secrets_local.py
            echo 'SECRETS_DEBUG = ${SECRETS_DEBUG}' >> deploy/secrets_local.py
            echo 'SECRETS_STATIC_URL = ${SECRETS_STATIC_URL}' >> deploy/secrets_local.py
            echo 'SECRETS_STATIC_ROOT = ${SECRETS_STATIC_ROOT}' >> deploy/secrets_local.py
            echo 'SECRETS_LOG_PATH = ${SECRETS_LOG_PATH}' >> deploy/secrets_local.py
            echo 'SECRETS_SECRET_KEY = ${SECRETS_SECRET_KEY}' >> deploy/secrets_local.py
            echo pipenv run python manage.py test

      - store_artifacts:
          path: test-reports
          destination: test-reports